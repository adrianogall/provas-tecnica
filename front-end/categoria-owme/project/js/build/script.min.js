
/*###########################################
    SCRIPT - Prova Técnica | Adriano Gall
###########################################*/



//Variáveis iniciais
var numPage = 1,
    qntPage = 20,
    Xmlhttp = new XMLHttpRequest(),
    arqJsonProd = "../../project/files/mock-products.json",
    getParamUrl = getParamUrl(),
    filter = "valor-desc",
    urlInitial = true;
    
//Verifica de tem parâmetros de filtros passados na url no carregamento da página
if(getParamUrl.hasOwnProperty('q')){  

    urlInitial = false;
    filter = getParamUrl.q;
    window.document.getElementById("change-filter").value = filter;
    
    if(getParamUrl.hasOwnProperty('page'))
        numPage = getParamUrl.page;
} 

//Função que inicia a sessão de produtos.
setStorageListProd();

//Função start para as funcinalidades de filtro e paginação
function getStartListProd(filter, numPage){
    objJsonProd = localStorage.getItem('objJsonProd');
    objJsonProd = JSON.parse(objJsonProd).products;
    orderFilterJson(objJsonProd, filter, numPage);
    setUrlFilter(filter, numPage); 
}

//Faz leitura do arquivo json e salva a lista de produtos em sessão
function setStorageListProd(){ 

    Xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            localStorage.setItem("objJsonProd", this.responseText);
            getStartListProd(filter, numPage);                   
        }
    };
    Xmlhttp.open("GET", arqJsonProd, true);
    Xmlhttp.send();    
}    

//Atualiza os parâmetros na url
function setUrlFilter(filter, numPage){
    window.history.replaceState('', '', window.location.href.split('?')[0] + "?q=" + filter + "&page=" + numPage);
}

//Contrutor da listagem de produtos
function constListProducts(arrProd, numPage) {

    var htmlListProd = "",
        targetProd = parseInt(numPage-1) * parseInt(qntPage),
        i2 = 0;

    for(var i = 0; i < arrProd.length; i++) {
        if(targetProd <= i && i2 < qntPage){
            htmlListProd += `<li>
                                <div class="cont">
                                    <a class="link" href="javascript:void(0)" title="` + arrProd[i].name + `" class="` + arrProd[i].name+`"></a>
                                    <div class="thumb"><img alt="` + arrProd[i].name + `" title="` + arrProd[i].name + `" src="` + arrProd[i].image + `"></div>
                                    <div class="desc">
                                        <h3>` + arrProd[i].name + `</h3>
                                        <p> <span>R$ ` + numberToReal(arrProd[i].price); + `</span></p>
                                    </div>
                                </div>
                            </li>`;
            i2++;
        }                       
    }
    document.getElementById("list-products").innerHTML = htmlListProd;
}

//Busca os parâmetros da url para executar alistagem de produtos
function getParamUrl(){

    var query = location.search.slice(1);
    var partes = query.split('&');
    var data = {};

    partes.forEach(function (parte) {
        if(parte != ''){
            var chaveValor = parte.split('=');
            var chave = chaveValor[0];
            var valor = chaveValor[1];
            data[chave] = valor;
        }            
    });
    return data;
}

//Contrutor da paginação
function constPaginator(objList, filter, numPage){

    var qntTotal = Object.keys(objList).length,
        htmlListPag = "",
        contrPag = parseInt(qntTotal-1) / parseInt(qntPage);
        
    for(var i = 1; i <= Math.ceil(contrPag); i++) {
        if(numPage == i)
            htmlListPag += `<li class="active"><span>` + i + `</span></li>`;
        else
            htmlListPag += `<li><a href="javascript:void(0)" onClick="getStartListProd('` + filter + `',` + i + `);">` + i + `</a></li>`;             
    }
    document.getElementById("pag-prod-nav").innerHTML = htmlListPag;
}

//Ordena o abjeto de produtos de acordo com o filtro
function orderFilterJson(objList, filter, numPage){ 

    var arrFilter = filter.split('-');
    objList.sort(dynamicSort(arrFilter));   
    var arrProd = Object.values(objList);
    
    //Construtor da listagem de produtos
    constListProducts(arrProd, numPage);
    
    //Construtor da paginação
    constPaginator(objList, filter, numPage);
}

//Ordena o object de produtos conforme os parâmetros passados
function dynamicSort(arrtFilter) {

    var sortOrder = 1;
    if(arrtFilter[0] === "-") {
        sortOrder = -1;
        arrtFilter = arrtFilter.substr(1);
    }

    return function (a,b) {
        if(arrtFilter[1] == 'asc')
            var result = (a[arrtFilter[0]] < b[arrtFilter[0]]) ? -1 : (a[arrtFilter[0]] > b[arrtFilter[0]]) ? 1 : 0;
        else
            var result = (a[arrtFilter[0]] > b[arrtFilter[0]]) ? -1 : (a[arrtFilter[0]] < b[arrtFilter[0]]) ? 1 : 0;
        return result * sortOrder;
    }
}

function numberToReal(numero) {
    var numero = numero.toFixed(2).split('.');
    numero[0] = "R$ " + numero[0].split(/(?=(?:...)*$)/).join('.');
    return numero.join(',');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6InNjcmlwdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbiAgICBTQ1JJUFQgLSBQcm92YSBUw6ljbmljYSB8IEFkcmlhbm8gR2FsbFxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjKi9cclxuXHJcblxyXG5cclxuLy9WYXJpw6F2ZWlzIGluaWNpYWlzXHJcbnZhciBudW1QYWdlID0gMSxcclxuICAgIHFudFBhZ2UgPSAyMCxcclxuICAgIFhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKSxcclxuICAgIGFycUpzb25Qcm9kID0gXCIuLi8uLi9wcm9qZWN0L2ZpbGVzL21vY2stcHJvZHVjdHMuanNvblwiLFxyXG4gICAgZ2V0UGFyYW1VcmwgPSBnZXRQYXJhbVVybCgpLFxyXG4gICAgZmlsdGVyID0gXCJ2YWxvci1kZXNjXCIsXHJcbiAgICB1cmxJbml0aWFsID0gdHJ1ZTtcclxuICAgIFxyXG4vL1ZlcmlmaWNhIGRlIHRlbSBwYXLDom1ldHJvcyBkZSBmaWx0cm9zIHBhc3NhZG9zIG5hIHVybCBubyBjYXJyZWdhbWVudG8gZGEgcMOhZ2luYVxyXG5pZihnZXRQYXJhbVVybC5oYXNPd25Qcm9wZXJ0eSgncScpKXsgIFxyXG5cclxuICAgIHVybEluaXRpYWwgPSBmYWxzZTtcclxuICAgIGZpbHRlciA9IGdldFBhcmFtVXJsLnE7XHJcbiAgICB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFuZ2UtZmlsdGVyXCIpLnZhbHVlID0gZmlsdGVyO1xyXG4gICAgXHJcbiAgICBpZihnZXRQYXJhbVVybC5oYXNPd25Qcm9wZXJ0eSgncGFnZScpKVxyXG4gICAgICAgIG51bVBhZ2UgPSBnZXRQYXJhbVVybC5wYWdlO1xyXG59IFxyXG5cclxuLy9GdW7Dp8OjbyBxdWUgaW5pY2lhIGEgc2Vzc8OjbyBkZSBwcm9kdXRvcy5cclxuc2V0U3RvcmFnZUxpc3RQcm9kKCk7XHJcblxyXG4vL0Z1bsOnw6NvIHN0YXJ0IHBhcmEgYXMgZnVuY2luYWxpZGFkZXMgZGUgZmlsdHJvIGUgcGFnaW5hw6fDo29cclxuZnVuY3Rpb24gZ2V0U3RhcnRMaXN0UHJvZChmaWx0ZXIsIG51bVBhZ2Upe1xyXG4gICAgb2JqSnNvblByb2QgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnb2JqSnNvblByb2QnKTtcclxuICAgIG9iakpzb25Qcm9kID0gSlNPTi5wYXJzZShvYmpKc29uUHJvZCkucHJvZHVjdHM7XHJcbiAgICBvcmRlckZpbHRlckpzb24ob2JqSnNvblByb2QsIGZpbHRlciwgbnVtUGFnZSk7XHJcbiAgICBzZXRVcmxGaWx0ZXIoZmlsdGVyLCBudW1QYWdlKTsgXHJcbn1cclxuXHJcbi8vRmF6IGxlaXR1cmEgZG8gYXJxdWl2byBqc29uIGUgc2FsdmEgYSBsaXN0YSBkZSBwcm9kdXRvcyBlbSBzZXNzw6NvXHJcbmZ1bmN0aW9uIHNldFN0b3JhZ2VMaXN0UHJvZCgpeyBcclxuXHJcbiAgICBYbWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT0gNCAmJiB0aGlzLnN0YXR1cyA9PSAyMDApIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJvYmpKc29uUHJvZFwiLCB0aGlzLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgIGdldFN0YXJ0TGlzdFByb2QoZmlsdGVyLCBudW1QYWdlKTsgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFhtbGh0dHAub3BlbihcIkdFVFwiLCBhcnFKc29uUHJvZCwgdHJ1ZSk7XHJcbiAgICBYbWxodHRwLnNlbmQoKTsgICAgXHJcbn0gICAgXHJcblxyXG4vL0F0dWFsaXphIG9zIHBhcsOibWV0cm9zIG5hIHVybFxyXG5mdW5jdGlvbiBzZXRVcmxGaWx0ZXIoZmlsdGVyLCBudW1QYWdlKXtcclxuICAgIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSgnJywgJycsIHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCc/JylbMF0gKyBcIj9xPVwiICsgZmlsdGVyICsgXCImcGFnZT1cIiArIG51bVBhZ2UpO1xyXG59XHJcblxyXG4vL0NvbnRydXRvciBkYSBsaXN0YWdlbSBkZSBwcm9kdXRvc1xyXG5mdW5jdGlvbiBjb25zdExpc3RQcm9kdWN0cyhhcnJQcm9kLCBudW1QYWdlKSB7XHJcblxyXG4gICAgdmFyIGh0bWxMaXN0UHJvZCA9IFwiXCIsXHJcbiAgICAgICAgdGFyZ2V0UHJvZCA9IHBhcnNlSW50KG51bVBhZ2UtMSkgKiBwYXJzZUludChxbnRQYWdlKSxcclxuICAgICAgICBpMiA9IDA7XHJcblxyXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IGFyclByb2QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZih0YXJnZXRQcm9kIDw9IGkgJiYgaTIgPCBxbnRQYWdlKXtcclxuICAgICAgICAgICAgaHRtbExpc3RQcm9kICs9IGA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJsaW5rXCIgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHRpdGxlPVwiYCArIGFyclByb2RbaV0ubmFtZSArIGBcIiBjbGFzcz1cImAgKyBhcnJQcm9kW2ldLm5hbWUrYFwiPjwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRodW1iXCI+PGltZyBhbHQ9XCJgICsgYXJyUHJvZFtpXS5uYW1lICsgYFwiIHRpdGxlPVwiYCArIGFyclByb2RbaV0ubmFtZSArIGBcIiBzcmM9XCJgICsgYXJyUHJvZFtpXS5pbWFnZSArIGBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlc2NcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5gICsgYXJyUHJvZFtpXS5uYW1lICsgYDwvaDM+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4gPHNwYW4+UiQgYCArIG51bWJlclRvUmVhbChhcnJQcm9kW2ldLnByaWNlKTsgKyBgPC9zcGFuPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPmA7XHJcbiAgICAgICAgICAgIGkyKys7XHJcbiAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpc3QtcHJvZHVjdHNcIikuaW5uZXJIVE1MID0gaHRtbExpc3RQcm9kO1xyXG59XHJcblxyXG4vL0J1c2NhIG9zIHBhcsOibWV0cm9zIGRhIHVybCBwYXJhIGV4ZWN1dGFyIGFsaXN0YWdlbSBkZSBwcm9kdXRvc1xyXG5mdW5jdGlvbiBnZXRQYXJhbVVybCgpe1xyXG5cclxuICAgIHZhciBxdWVyeSA9IGxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKTtcclxuICAgIHZhciBwYXJ0ZXMgPSBxdWVyeS5zcGxpdCgnJicpO1xyXG4gICAgdmFyIGRhdGEgPSB7fTtcclxuXHJcbiAgICBwYXJ0ZXMuZm9yRWFjaChmdW5jdGlvbiAocGFydGUpIHtcclxuICAgICAgICBpZihwYXJ0ZSAhPSAnJyl7XHJcbiAgICAgICAgICAgIHZhciBjaGF2ZVZhbG9yID0gcGFydGUuc3BsaXQoJz0nKTtcclxuICAgICAgICAgICAgdmFyIGNoYXZlID0gY2hhdmVWYWxvclswXTtcclxuICAgICAgICAgICAgdmFyIHZhbG9yID0gY2hhdmVWYWxvclsxXTtcclxuICAgICAgICAgICAgZGF0YVtjaGF2ZV0gPSB2YWxvcjtcclxuICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBkYXRhO1xyXG59XHJcblxyXG4vL0NvbnRydXRvciBkYSBwYWdpbmHDp8Ojb1xyXG5mdW5jdGlvbiBjb25zdFBhZ2luYXRvcihvYmpMaXN0LCBmaWx0ZXIsIG51bVBhZ2Upe1xyXG5cclxuICAgIHZhciBxbnRUb3RhbCA9IE9iamVjdC5rZXlzKG9iakxpc3QpLmxlbmd0aCxcclxuICAgICAgICBodG1sTGlzdFBhZyA9IFwiXCIsXHJcbiAgICAgICAgY29udHJQYWcgPSBwYXJzZUludChxbnRUb3RhbC0xKSAvIHBhcnNlSW50KHFudFBhZ2UpO1xyXG4gICAgICAgIFxyXG4gICAgZm9yKHZhciBpID0gMTsgaSA8PSBNYXRoLmNlaWwoY29udHJQYWcpOyBpKyspIHtcclxuICAgICAgICBpZihudW1QYWdlID09IGkpXHJcbiAgICAgICAgICAgIGh0bWxMaXN0UGFnICs9IGA8bGkgY2xhc3M9XCJhY3RpdmVcIj48c3Bhbj5gICsgaSArIGA8L3NwYW4+PC9saT5gO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgaHRtbExpc3RQYWcgKz0gYDxsaT48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgb25DbGljaz1cImdldFN0YXJ0TGlzdFByb2QoJ2AgKyBmaWx0ZXIgKyBgJyxgICsgaSArIGApO1wiPmAgKyBpICsgYDwvYT48L2xpPmA7ICAgICAgICAgICAgIFxyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYWctcHJvZC1uYXZcIikuaW5uZXJIVE1MID0gaHRtbExpc3RQYWc7XHJcbn1cclxuXHJcbi8vT3JkZW5hIG8gYWJqZXRvIGRlIHByb2R1dG9zIGRlIGFjb3JkbyBjb20gbyBmaWx0cm9cclxuZnVuY3Rpb24gb3JkZXJGaWx0ZXJKc29uKG9iakxpc3QsIGZpbHRlciwgbnVtUGFnZSl7IFxyXG5cclxuICAgIHZhciBhcnJGaWx0ZXIgPSBmaWx0ZXIuc3BsaXQoJy0nKTtcclxuICAgIG9iakxpc3Quc29ydChkeW5hbWljU29ydChhcnJGaWx0ZXIpKTsgICBcclxuICAgIHZhciBhcnJQcm9kID0gT2JqZWN0LnZhbHVlcyhvYmpMaXN0KTtcclxuICAgIFxyXG4gICAgLy9Db25zdHJ1dG9yIGRhIGxpc3RhZ2VtIGRlIHByb2R1dG9zXHJcbiAgICBjb25zdExpc3RQcm9kdWN0cyhhcnJQcm9kLCBudW1QYWdlKTtcclxuICAgIFxyXG4gICAgLy9Db25zdHJ1dG9yIGRhIHBhZ2luYcOnw6NvXHJcbiAgICBjb25zdFBhZ2luYXRvcihvYmpMaXN0LCBmaWx0ZXIsIG51bVBhZ2UpO1xyXG59XHJcblxyXG4vL09yZGVuYSBvIG9iamVjdCBkZSBwcm9kdXRvcyBjb25mb3JtZSBvcyBwYXLDom1ldHJvcyBwYXNzYWRvc1xyXG5mdW5jdGlvbiBkeW5hbWljU29ydChhcnJ0RmlsdGVyKSB7XHJcblxyXG4gICAgdmFyIHNvcnRPcmRlciA9IDE7XHJcbiAgICBpZihhcnJ0RmlsdGVyWzBdID09PSBcIi1cIikge1xyXG4gICAgICAgIHNvcnRPcmRlciA9IC0xO1xyXG4gICAgICAgIGFycnRGaWx0ZXIgPSBhcnJ0RmlsdGVyLnN1YnN0cigxKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGEsYikge1xyXG4gICAgICAgIGlmKGFycnRGaWx0ZXJbMV0gPT0gJ2FzYycpXHJcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSAoYVthcnJ0RmlsdGVyWzBdXSA8IGJbYXJydEZpbHRlclswXV0pID8gLTEgOiAoYVthcnJ0RmlsdGVyWzBdXSA+IGJbYXJydEZpbHRlclswXV0pID8gMSA6IDA7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gKGFbYXJydEZpbHRlclswXV0gPiBiW2FycnRGaWx0ZXJbMF1dKSA/IC0xIDogKGFbYXJydEZpbHRlclswXV0gPCBiW2FycnRGaWx0ZXJbMF1dKSA/IDEgOiAwO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQgKiBzb3J0T3JkZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG51bWJlclRvUmVhbChudW1lcm8pIHtcclxuICAgIHZhciBudW1lcm8gPSBudW1lcm8udG9GaXhlZCgyKS5zcGxpdCgnLicpO1xyXG4gICAgbnVtZXJvWzBdID0gXCJSJCBcIiArIG51bWVyb1swXS5zcGxpdCgvKD89KD86Li4uKSokKS8pLmpvaW4oJy4nKTtcclxuICAgIHJldHVybiBudW1lcm8uam9pbignLCcpO1xyXG59Il19